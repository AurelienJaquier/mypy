[case testLowLevelIntBasics]
from mypy_extensions import i64

def f() -> i64:
    x: i64 = 5
    y = x
    return y
[out]
def f():
    x, y :: int64
L0:
    x = 5
    y = x
    return y

[case testLowLevelIntCompare]
from mypy_extensions import i64

def min(x: i64, y: i64) -> i64:
    if x < y:
        return x
    else:
        return y
[out]
def min(x, y):
    x, y :: int64
    r0 :: bit
L0:
    r0 = x < y :: signed
    if r0 goto L1 else goto L2 :: bool
L1:
    return x
L2:
    return y
L3:
    unreachable

[case testLowLevelIntArithmetic]
from mypy_extensions import i64

def f(x: i64, y: i64) -> i64:
    z = x + y
    return y - z
[out]
def f(x, y):
    x, y, r0, z, r1 :: int64
L0:
    r0 = x + y
    z = r0
    r1 = y - z
    return r1
